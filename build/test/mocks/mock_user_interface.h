/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_USER_INTERFACE_H
#define _MOCK_USER_INTERFACE_H

#include "unity.h"
#include "user_interface.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_user_interface_Init(void);
void mock_user_interface_Destroy(void);
void mock_user_interface_Verify(void);


typedef int(*cmock_user_interface_func_ptr1)(const char*);


#define open_file_error_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("open_file_error requires _Ignore (not AndReturn)");
#define open_file_error_Ignore() open_file_error_CMockIgnore()
void open_file_error_CMockIgnore(void);
#define open_file_error_StopIgnore() open_file_error_CMockStopIgnore()
void open_file_error_CMockStopIgnore(void);
#define open_file_error_ExpectAndReturn(cmock_retval) TEST_FAIL_MESSAGE("open_file_error requires _Expect (not AndReturn)");
#define open_file_error_Expect() open_file_error_CMockExpect(__LINE__)
void open_file_error_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define print_account_confirmation_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("print_account_confirmation requires _Ignore (not AndReturn)");
#define print_account_confirmation_Ignore() print_account_confirmation_CMockIgnore()
void print_account_confirmation_CMockIgnore(void);
#define print_account_confirmation_StopIgnore() print_account_confirmation_CMockStopIgnore()
void print_account_confirmation_CMockStopIgnore(void);
#define print_account_confirmation_ExpectAndReturn(account, cmock_retval) TEST_FAIL_MESSAGE("print_account_confirmation requires _Expect (not AndReturn)");
#define print_account_confirmation_Expect(account) print_account_confirmation_CMockExpect(__LINE__, account)
void print_account_confirmation_CMockExpect(UNITY_LINE_TYPE cmock_line, const BankAccount* account);
#define get_nonempty_input_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("get_nonempty_input requires _Ignore (not AndReturn)");
#define get_nonempty_input_Ignore() get_nonempty_input_CMockIgnore()
void get_nonempty_input_CMockIgnore(void);
#define get_nonempty_input_StopIgnore() get_nonempty_input_CMockStopIgnore()
void get_nonempty_input_CMockStopIgnore(void);
#define get_nonempty_input_ExpectAndReturn(prompt, buffer, length, cmock_retval) TEST_FAIL_MESSAGE("get_nonempty_input requires _Expect (not AndReturn)");
#define get_nonempty_input_Expect(prompt, buffer, length) get_nonempty_input_CMockExpect(__LINE__, prompt, buffer, length)
void get_nonempty_input_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* prompt, char* buffer, int length);
#define get_nonempty_input_ReturnThruPtr_buffer(buffer) get_nonempty_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(char))
#define get_nonempty_input_ReturnArrayThruPtr_buffer(buffer, cmock_len) get_nonempty_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, (cmock_len * sizeof(*buffer)))
#define get_nonempty_input_ReturnMemThruPtr_buffer(buffer, cmock_size) get_nonempty_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, (cmock_size))
void get_nonempty_input_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, char const* buffer, size_t cmock_size);
#define get_validated_input_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("get_validated_input requires _Ignore (not AndReturn)");
#define get_validated_input_Ignore() get_validated_input_CMockIgnore()
void get_validated_input_CMockIgnore(void);
#define get_validated_input_StopIgnore() get_validated_input_CMockStopIgnore()
void get_validated_input_CMockStopIgnore(void);
#define get_validated_input_ExpectAndReturn(prompt, buffer, size, validate, error_msg, cmock_retval) TEST_FAIL_MESSAGE("get_validated_input requires _Expect (not AndReturn)");
#define get_validated_input_Expect(prompt, buffer, size, validate, error_msg) get_validated_input_CMockExpect(__LINE__, prompt, buffer, size, validate, error_msg)
void get_validated_input_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* prompt, char* buffer, int size, cmock_user_interface_func_ptr1 validate, const char* error_msg);
#define get_validated_input_ReturnThruPtr_buffer(buffer) get_validated_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, sizeof(char))
#define get_validated_input_ReturnArrayThruPtr_buffer(buffer, cmock_len) get_validated_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, (cmock_len * sizeof(*buffer)))
#define get_validated_input_ReturnMemThruPtr_buffer(buffer, cmock_size) get_validated_input_CMockReturnMemThruPtr_buffer(__LINE__, buffer, (cmock_size))
void get_validated_input_CMockReturnMemThruPtr_buffer(UNITY_LINE_TYPE cmock_line, char const* buffer, size_t cmock_size);
#define get_valid_balance_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("get_valid_balance requires _Ignore (not AndReturn)");
#define get_valid_balance_Ignore() get_valid_balance_CMockIgnore()
void get_valid_balance_CMockIgnore(void);
#define get_valid_balance_StopIgnore() get_valid_balance_CMockStopIgnore()
void get_valid_balance_CMockStopIgnore(void);
#define get_valid_balance_ExpectAndReturn(prompt, value, cmock_retval) TEST_FAIL_MESSAGE("get_valid_balance requires _Expect (not AndReturn)");
#define get_valid_balance_Expect(prompt, value) get_valid_balance_CMockExpect(__LINE__, prompt, value)
void get_valid_balance_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* prompt, double* value);
#define get_valid_balance_ReturnThruPtr_value(value) get_valid_balance_CMockReturnMemThruPtr_value(__LINE__, value, sizeof(double))
#define get_valid_balance_ReturnArrayThruPtr_value(value, cmock_len) get_valid_balance_CMockReturnMemThruPtr_value(__LINE__, value, (cmock_len * sizeof(*value)))
#define get_valid_balance_ReturnMemThruPtr_value(value, cmock_size) get_valid_balance_CMockReturnMemThruPtr_value(__LINE__, value, (cmock_size))
void get_valid_balance_CMockReturnMemThruPtr_value(UNITY_LINE_TYPE cmock_line, double const* value, size_t cmock_size);
#define print_message_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("print_message requires _Ignore (not AndReturn)");
#define print_message_Ignore() print_message_CMockIgnore()
void print_message_CMockIgnore(void);
#define print_message_StopIgnore() print_message_CMockStopIgnore()
void print_message_CMockStopIgnore(void);
#define print_message_ExpectAndReturn(msg, cmock_retval) TEST_FAIL_MESSAGE("print_message requires _Expect (not AndReturn)");
#define print_message_Expect(msg) print_message_CMockExpect(__LINE__, msg)
void print_message_CMockExpect(UNITY_LINE_TYPE cmock_line, const char* msg);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
